{"openapi":"3.0.1","info":{"title":"Event Notification Service","version":"v1"},"servers":[{"url":"https://aps2.platform.illumina.com/"}],"security":[{"Bearer":[]}],"paths":{"/v1/subscriptions":{"get":{"tags":["Subscriptions"],"summary":"Get a list of subscriptions.","description":"Get a list of subscriptions accessible by the current JWT token’s tenant Id.","operationId":"listSubscriptions","parameters":[{"name":"eventType","in":"query","description":"Optional event type for filtering returned subscriptions","schema":{"maxLength":255,"type":"string"}},{"name":"pageSize","in":"query","description":"Optional parameter to define the page size returned. Valid inputs range from 1-1000.","schema":{"maximum":1000,"minimum":1,"type":"integer","format":"int32"}},{"name":"pageToken","in":"query","description":"Utilized for navigation after initial listing. Valid values include those of\r\nfirstPageToken, nextPageToken, and previousPageToken in the list response.\r\nWhen there are no more pages, the nextPageToken will be null.","schema":{"type":"string"}}],"responses":{"200":{"description":"Subscriptions found and returned successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubscriptionList"}}}},"400":{"description":"An invalid or missing input parameter will result in a bad request.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"The acting identity cannot be authenticated and authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"The acting identity is not authorized to access subscriptions.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"default":{"description":"Unexpected issue. Please try your request again. If problem persists, please contact the system administrator.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}},"post":{"tags":["Subscriptions"],"summary":"Creates a subscription to an event type and defines how those events get delivered.","description":"Events can be delivered to AWS SQS, AWS SNS, or can be used to launch a WES workflow.","operationId":"createSubscription","requestBody":{"content":{"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/CreateSubscriptionRequest"}},"application/json":{"schema":{"$ref":"#/components/schemas/CreateSubscriptionRequest"}},"text/json":{"schema":{"$ref":"#/components/schemas/CreateSubscriptionRequest"}},"application/*+json":{"schema":{"$ref":"#/components/schemas/CreateSubscriptionRequest"}}},"required":false},"responses":{"201":{"description":"The subscription is created successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}},"400":{"description":"An invalid or missing input parameter will result in a bad request.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"The acting identity cannot be authenticated and authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"The acting identity is not authorized to subscribe to the given event type or deliver to the given delivery target.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"409":{"description":"The given delivery target is not valid or cannot be delivered to.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"default":{"description":"Unexpected issue. Please try your request again. If problem persists, please contact the system administrator.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}},"x-codegen-request-body-name":"body"}},"/v1/subscriptions/{subscriptionId}":{"get":{"tags":["Subscriptions"],"summary":"Given a subscription id, returns information about that subscription.","description":"Given a subscription id, returns information about that subscription accessible by the current JWT token’s tenant Id.","operationId":"getSubscription","parameters":[{"name":"subscriptionId","in":"path","description":"Id of the subscription to return","required":true,"schema":{"maxLength":255,"type":"string"}}],"responses":{"200":{"description":"Subscription for the given ID is found and returned successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}},"400":{"description":"An invalid or missing input parameter will result in a bad request.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"The acting identity cannot be authenticated and authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"The acting identity is not authorized to access the subscription for the given ID.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Could not find a subscription for the given ID.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"410":{"description":"The subscription for the given ID has been disabled.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"default":{"description":"Unexpected issue. Please try your request again. If problem persists, please contact the system administrator.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}},"delete":{"tags":["Subscriptions"],"summary":"Given a subscription id, disables the specified subscription.","description":"Given a subscription id, disables that subscription with the current JWT token’s tenant Id.","operationId":"disableSubscription","parameters":[{"name":"subscriptionId","in":"path","description":"Id of the subscription to be disabled","required":true,"schema":{"maxLength":255,"type":"string"}}],"responses":{"200":{"description":"Subscription for the given ID is disabled successfully.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Subscription"}}}},"400":{"description":"An invalid or missing input parameter will result in a bad request.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"The acting identity cannot be authenticated and authorized.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"403":{"description":"The acting identity is not authorized to disable the subscription for the given ID.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Could not find a subscription for the given ID.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"410":{"description":"The subscription for the given ID has been disabled.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"default":{"description":"Unexpected issue. Please try your request again. If problem persists, please contact the system administrator.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}}},"components":{"schemas":{"DeliveryTargetAwsSnsTopic":{"required":["topicArn"],"type":"object","properties":{"topicArn":{"type":"string","description":"ARN for the AWS SNS topic"}},"description":"Configuration for an AWS SNS delivery topic"},"DeliveryTargetAwsSqsQueue":{"required":["queueUrl"],"type":"object","properties":{"queueUrl":{"type":"string","description":"URL for the AWS SQS queue"}},"description":"Configuration for an AWS SQS delivery queue"},"DeliveryTargetWorkflowRunLaunch":{"required":["id","name","version"],"type":"object","properties":{"id":{"type":"string","description":"Id of the workflow to launch"},"version":{"type":"string","description":"Version of the workflow to launch, for the given id"},"name":{"type":"string","description":"Name for the workflowRun"},"input":{"type":"object","description":"Arguments for the workflowRun"}},"description":"Configuration for a delivery via WES workflow run launch"},"DeliveryTarget":{"type":"object","properties":{"awsSnsTopic":{"$ref":"#/components/schemas/DeliveryTargetAwsSnsTopic"},"awsSqsQueue":{"$ref":"#/components/schemas/DeliveryTargetAwsSqsQueue"},"workflowRunLaunch":{"$ref":"#/components/schemas/DeliveryTargetWorkflowRunLaunch"}},"description":"Configuration for the action to perform for events matching this subscription; only one delivery type may be specified"},"Subscription":{"type":"object","properties":{"id":{"type":"string","description":"Unique id of the subscription"},"urn":{"type":"string","description":"URN of the subscription"},"type":{"type":"string","description":"Type of event the subscription matches"},"actions":{"type":"array","description":"Types of actions the subscription matches for the event type","items":{"type":"string"}},"filterExpression":{"type":"string","description":"JSON-structured filter expression for events matching the subscription"},"name":{"type":"string","description":"Name of the subscription"},"description":{"type":"string","description":"Optional description for the subscription"},"deliveryTarget":{"$ref":"#/components/schemas/DeliveryTarget"},"matchIdentities":{"type":"array","description":"ACL Identities for events the subscription matches","items":{"type":"string"}},"acl":{"type":"array","description":"The list of identities that have access to this subscription","items":{"type":"string"}},"tenantId":{"type":"string","description":"Tenant id of the subscription owner"},"createdByUserId":{"type":"string","description":"User id for the creator of the subscription"},"timeCreated":{"type":"string","description":"Timestamp when the subscription was created","format":"date-time"},"deletedByUserId":{"type":"string","description":"Id of the user who deleted the subscription, if applicable"},"timeDeleted":{"type":"string","description":"Timestamp when the subscription was deleted, if applicable","format":"date-time"},"isDeleted":{"type":"boolean","description":"Whether or not the subscription has been deleted"}},"description":"Details for an Event Notification Service subscription"},"SubscriptionListSortFields":{"type":"string","enum":["id"]},"SortDirection":{"type":"string","enum":["Asc","Desc","Ascending","Descending"]},"SubscriptionList":{"type":"object","properties":{"items":{"type":"array","items":{"$ref":"#/components/schemas/Subscription"}},"itemCount":{"type":"integer","format":"int32"},"firstPageToken":{"type":"string"},"nextPageToken":{"type":"string"},"prevPageToken":{"type":"string"},"lastPageToken":{"type":"string"},"totalItemCount":{"type":"integer","format":"int64"},"totalPageCount":{"type":"integer","format":"int64"},"sortedBy":{"$ref":"#/components/schemas/SubscriptionListSortFields"},"sortDirection":{"$ref":"#/components/schemas/SortDirection"}}},"ErrorResponse":{"type":"object","properties":{"code":{"type":"string","description":"Error code which uniquely identifies the type of error which occurred"},"message":{"type":"string","description":"Description of the error which occurred"},"details":{"type":"array","description":"Additional details for conditions which caused the error","items":{"type":"object","properties":{}}}},"description":"Details for an error which occurred"},"CreateSubscriptionRequest":{"required":["deliveryTarget","name","type"],"type":"object","properties":{"type":{"maxLength":255,"pattern":"^[a-zA-Z]+[.a-zA-Z]*$","type":"string","description":"Event type which will be subscribed to"},"actions":{"type":"array","description":"Actions which will be subscribed to for the event type","items":{"type":"string"}},"name":{"maxLength":255,"pattern":"^[a-zA-Z0-9]+[a-zA-Z0-9_-]*$","type":"string","description":"Name of the subscription"},"description":{"maxLength":8192,"type":"string","description":"Optional description for the subscription"},"filterExpression":{"maxLength":8192,"type":"string","description":"JSON-structured filter expression for events matching the subscription"},"deliveryTarget":{"$ref":"#/components/schemas/DeliveryTarget"}}}},"securitySchemes":{"Bearer":{"type":"apiKey","description":"JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"","name":"Authorization","in":"header"}}}}